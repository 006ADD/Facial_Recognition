
package Util;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class Connecor {
    public Statement stm;
    public ResultSet rs;
    public Connection conn;
    
    private final String driver = "org.postgresql.Driver";
    private final String path = "jdbc:postgresql://localhost:5432/Facial_recognition";
    private final String user = "postgres";
    private final String pass = "pgAdmin666";
    

  
    public void connection() {
        try {
            System.setProperty("jdbc.Driver", driver);
            conn = DriverManager.getConnection(path, user, pass);
        } catch (SQLException e) {
            System.out.println("Error: " + e);
        }
    }
     
    public void disconnect() {
        try {
            conn.close();
        } catch (SQLException e) {
            System.out.println("Error: " + e);
        }
    }
    public void executeSQL(String SQL) {
        try {
            stm = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stm.executeQuery(SQL);
        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }
    
    public static void main(String[] args){
        Connecor ds = new Connecor();
        ds.connection();
    }

    public PreparedStatement prepareStatement(String query) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}


/*
create table Person(
    id INT generated by default as identity PRIMARY KEY,
    firstName VARCHAR(100) NOT NULL,
    lastName VARCHAR(100) NOT NULL,
    position VARCHAR(100)NOT NULL,
    yearOfBirth VARCHAR(100)NOT NULL,
    registrationTime VARCHAR(100)NOT NULL
);
CREATE TABLE Enter (
    id SERIAL PRIMARY KEY,
    person_id INT REFERENCES Person(id),
    enterdate VARCHAR(100)
);
CREATE TABLE ExitDB (
    id SERIAL PRIMARY KEY,
    person_id INT REFERENCES Person(id),
    exitdate VARCHAR(100)
);


CREATE TABLE Controller (
    person_id INT REFERENCES Person(id),
    enterdate VARCHAR(100),
	exitdate VARCHAR(100)
);

*/

